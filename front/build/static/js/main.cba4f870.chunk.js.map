{"version":3,"sources":["components/create-student.component.js","components/edit-student.component.js","components/StudentTableRow.js","components/student-list.component.js","App.js","serviceWorker.js","index.js"],"names":["CreateStudent","props","onChangeStudentName","bind","onChangeStudentEmail","onChangeStudentRollno","onSubmit","state","name","email","rollno","e","this","setState","target","value","preventDefault","studentObject","axios","post","then","res","console","log","data","className","Form","Group","controlId","Label","Control","type","onChange","Button","variant","size","block","Component","EditStudent","get","match","params","id","catch","error","put","history","push","StudentTableRow","deleteStudent","delete","obj","_id","to","onClick","StudentList","students","map","i","Table","striped","bordered","hover","DataTable","App","Navbar","bg","Container","Brand","Nav","Row","Col","md","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cba4f870.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nexport default class CreateStudent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    // Setting up functions\r\n    this.onChangeStudentName = this.onChangeStudentName.bind(this);\r\n    this.onChangeStudentEmail = this.onChangeStudentEmail.bind(this);\r\n    this.onChangeStudentRollno = this.onChangeStudentRollno.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // Setting up state\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      rollno: ''\r\n    }\r\n  }\r\n\r\n  onChangeStudentName(e) {\r\n    this.setState({ name: e.target.value })\r\n  }\r\n\r\n  onChangeStudentEmail(e) {\r\n    this.setState({ email: e.target.value })\r\n  }\r\n\r\n  onChangeStudentRollno(e) {\r\n    this.setState({ rollno: e.target.value })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const studentObject = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      rollno: this.state.rollno\r\n    };\r\n\r\n    axios.post('http://localhost:4000/students/create-student', studentObject)\r\n      .then(res => console.log(res.data));\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      rollno: ''\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (<div className=\"form-wrapper\">\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeStudentName} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" value={this.state.email} onChange={this.onChangeStudentEmail} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Roll No</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.rollno} onChange={this.onChangeStudentRollno} />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\r\n          Create Student\r\n        </Button>\r\n      </Form>\r\n    </div>);\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\n\r\nexport default class EditStudent extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.onChangeStudentName = this.onChangeStudentName.bind(this);\r\n    this.onChangeStudentEmail = this.onChangeStudentEmail.bind(this);\r\n    this.onChangeStudentRollno = this.onChangeStudentRollno.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    // State\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      rollno: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:4000/students/edit-student/' + this.props.match.params.id)\r\n      .then(res => {\r\n        this.setState({\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          rollno: res.data.rollno\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  onChangeStudentName(e) {\r\n    this.setState({ name: e.target.value })\r\n  }\r\n\r\n  onChangeStudentEmail(e) {\r\n    this.setState({ email: e.target.value })\r\n  }\r\n\r\n  onChangeStudentRollno(e) {\r\n    this.setState({ rollno: e.target.value })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    const studentObject = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      rollno: this.state.rollno\r\n    };\r\n\r\n    axios.put('http://localhost:4000/students/update-student/' + this.props.match.params.id, studentObject)\r\n      .then((res) => {\r\n        console.log(res.data)\r\n        console.log('Student successfully updated')\r\n      }).catch((error) => {\r\n        console.log(error)\r\n      })\r\n\r\n    // Redirect to Student List \r\n    this.props.history.push('/student-list')\r\n  }\r\n\r\n\r\n  render() {\r\n    return (<div className=\"form-wrapper\">\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.name} onChange={this.onChangeStudentName} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control type=\"email\" value={this.state.email} onChange={this.onChangeStudentEmail} />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"Name\">\r\n          <Form.Label>Roll No</Form.Label>\r\n          <Form.Control type=\"text\" value={this.state.rollno} onChange={this.onChangeStudentRollno} />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\r\n          Update Student\r\n        </Button>\r\n      </Form>\r\n    </div>);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nexport default class StudentTableRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.deleteStudent = this.deleteStudent.bind(this);\r\n    }\r\n\r\n    deleteStudent() {\r\n        axios.delete('http://localhost:4000/students/delete-student/' + this.props.obj._id)\r\n            .then((res) => {\r\n                console.log('Student successfully deleted!')\r\n            }).catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.obj.name}</td>\r\n                <td>{this.props.obj.email}</td>\r\n                <td>{this.props.obj.rollno}</td>\r\n                <td>\r\n                    <Link className=\"edit-link\" to={\"/edit-student/\" + this.props.obj._id}>\r\n                        Edit\r\n                    </Link>\r\n                    <Button onClick={this.deleteStudent} size=\"sm\" variant=\"danger\">Delete</Button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nimport Table from 'react-bootstrap/Table';\r\nimport StudentTableRow from './StudentTableRow';\r\n\r\n\r\nexport default class StudentList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      students: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get('http://localhost:4000/students/')\r\n      .then(res => {\r\n        this.setState({\r\n          students: res.data\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  DataTable() {\r\n    return this.state.students.map((res, i) => {\r\n      return <StudentTableRow obj={res} key={i} />;\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return (<div className=\"table-wrapper\">\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Roll No</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.DataTable()}\r\n        </tbody>\r\n      </Table>\r\n    </div>);\r\n  }\r\n}","import React from \"react\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport CreateStudent from \"./components/create-student.component\";\nimport EditStudent from \"./components/edit-student.component\";\nimport StudentList from \"./components/student-list.component\";\n\nfunction App() {\n  return (<Router>\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n\n            <Navbar.Brand>\n              <Link to={\"/create-student\"} className=\"nav-link\">\n                React MERN Stack App\n              </Link>\n            </Navbar.Brand>\n\n            <Nav className=\"justify-content-end\">\n              <Nav>\n                <Link to={\"/create-student\"} className=\"nav-link\">\n                  Create Student\n                </Link>\n              </Nav>\n\n              {/* <Nav>\n                <Link to={\"/edit-student/:id\"} className=\"nav-link\">\n                  Edit Student\n                </Link>\n              </Nav> */}\n\n              <Nav>\n                <Link to={\"/student-list\"} className=\"nav-link\">\n                  Student List\n                </Link>\n              </Nav>\n            </Nav>\n\n          </Container>\n        </Navbar>\n      </header>\n\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div className=\"wrapper\">\n              <Switch>\n                <Route exact path='/' component={CreateStudent} />\n                <Route path=\"/create-student\" component={CreateStudent} />\n                <Route path=\"/edit-student/:id\" component={EditStudent} />\n                <Route path=\"/student-list\" component={StudentList} />\n              </Switch>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  </Router>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n          // Our service worker won't work if PUBLIC_URL is on a different origin\n          // from what our page is served on. This might happen if a CDN is used to\n          // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n          return;\n      }\n\n      window.addEventListener('load', () => {\n          const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n          if (isLocalhost) {\n              // This is running on localhost. Let's check if a service worker still exists or not.\n              checkValidServiceWorker(swUrl, config);\n\n              // Add some additional logging to localhost, pointing developers to the\n              // service worker/PWA documentation.\n              navigator.serviceWorker.ready.then(() => {\n                  console.log(\n                      'This web app is being served cache-first by a service '\n                  );\n              });\n          } else {\n              // Is not localhost. Just register service worker\n              registerValidSW(swUrl, config);\n          }\n      });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n          registration.onupdatefound = () => {\n              const installingWorker = registration.installing;\n              if (installingWorker == null) {\n                  return;\n              }\n              installingWorker.onstatechange = () => {\n                  if (installingWorker.state === 'installed') {\n                      if (navigator.serviceWorker.controller) {\n                          // At this point, the updated precached content has been fetched,\n                          // but the previous service worker will still serve the older\n                          // content until all client tabs are closed.\n                          console.log(\n                              'New content is available and will be used when all '\n                          );\n\n                          // Execute callback\n                          if (config && config.onUpdate) {\n                              config.onUpdate(registration);\n                          }\n                      } else {\n                          // At this point, everything has been precached.\n                          // It's the perfect time to display a\n                          // \"Content is cached for offline use.\" message.\n                          console.log('Content is cached for offline use.');\n\n                          // Execute callback\n                          if (config && config.onSuccess) {\n                              config.onSuccess(registration);\n                          }\n                      }\n                  }\n              };\n          };\n      })\n      .catch(error => {\n          console.error('Error during service worker registration:', error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n          headers: {\n              'Service-Worker': 'script'\n          },\n      })\n      .then(response => {\n          // Ensure service worker exists, and that we really are getting a JS file.\n          const contentType = response.headers.get('content-type');\n          if (\n              response.status === 404 ||\n              (contentType != null && contentType.indexOf('javascript') === -1)\n          ) {\n              // No service worker found. Probably a different app. Reload the page.\n              navigator.serviceWorker.ready.then(registration => {\n                  registration.unregister().then(() => {\n                      window.location.reload();\n                  });\n              });\n          } else {\n              // Service worker found. Proceed as normal.\n              registerValidSW(swUrl, config);\n          }\n      })\n      .catch(() => {\n          console.log(\n              'No internet connection found. App is running in offline mode.'\n          );\n      });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n          .then(registration => {\n              registration.unregister();\n          })\n          .catch(error => {\n              console.error(error.message);\n          });\n  }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}